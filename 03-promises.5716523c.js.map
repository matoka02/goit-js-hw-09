{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAW7B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACWC,KAAKC,SAAW,GAElCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEhBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAExBA,E,IAXcN,SAASC,cAAc,yBAgB/Ba,iBAAiB,SAAS,SAAAC,GACvCA,EAAIC,iBAGJ,IAFA,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACnBE,EAAI,EAAGA,EAAIlB,EAAOgB,MAAOE,IAC9BjB,EAAc,EAAIiB,EAAGJ,EAAaI,EAAID,GACrCE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALV,MACfhB,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,IAEhEI,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUwB,EAAKN,EAALV,MAChBhB,EAAA4B,OAAOK,QAAQ,sBAAuCH,OAAftB,EAAS,QAAYsB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\"use strict\";\n\nimport { Notify } from \"notiflix\";\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n            resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n    return promise;\n}\n\nbtnCreatePromise.addEventListener('click', evt => {\n    evt.preventDefault();\n    let firstDelay = Number(delay.value);\n    let delayStep = Number(step.value);\n    for (let i = 0; i < amount.value; i++) {\n        createPromise(1 + i, firstDelay + i * delayStep)\n        .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n});\n\n// const refs = {\n//     delay: document.querySelector('input[name=\"delay\"]'),\n//     step: document.querySelector('input[name=\"delay\"]'),\n//     amount: document.querySelector('input[name=\"amount\"]'),\n//     buttonPromise: document.querySelector('button[type=\"submit\"]'),\n// };\n\n// function createPromise(position, delay) {\n//     const promise = new Promise ((resolve, reject) =>{\n//         setTimeout(() =>{\n//             const shouldResolve = Math.random() > 0.3;\n//             if (shouldResolve) {\n//                 resolve({position, delay})\n//             } else {\n//                 reject({position, delay})\n//             }\n//         }, refs.delay);\n//     });\n\n//     return promise;\n// };\n\n// refs.buttonPromise.addEventListener('click', onStart());\n\n// function onStart(evt) {\n//     evt.preventDefault();\n//     let firstDelay = Number(refs.delay.value);\n//     let delayStep = Number(refs.step.value);\n//     console.log(firstDelay);\n//     console.log(delayStep);\n//     for (let i = 0; i < refs.amount.value; i++) {\n//         createPromise(1 + i, firstDelay + i*delayStep).then(({position, delay}) => {\n//             Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         }).catch(({position, delay})=>{\n//             Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//         });\n        \n//     }\n// };\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.5716523c.js.map"}